{{define "stripe-js"}}
<script src="https://js.stripe.com/v3/"></script>

<script>
let card

let stripe = Stripe('{{index .StringMap "stripe_pk"}}')
const cardMessages = document.querySelector("#card-messages")
const payButton = document.querySelector("#pay-button")
const processing = document.querySelector("#processing-payment")

function controlPayButton(shouldHide) {
  payButton.classList[shouldHide ? 'add' : 'remove']('d-none')
  processing.classList[shouldHide ? 'remove' : 'add']('d-none')
}

function showCardError(msg) {
  cardMessages.classList.add('alert-danger')
  cardMessages.classList.remove('d-none')
  cardMessages.classList.remove('alert-success')
  cardMessages.innerText = msg
}

function showCardSuccess(msg) {
  cardMessages.classList.add('alert-success')
  cardMessages.classList.remove('alert-danger')
  cardMessages.classList.remove('d-none')
  cardMessages.innerText = "Transaction success!"
}

function validation() {
  let form = document.querySelector("#charge-form")

  if (!form.checkValidity()) {
    this.event.preventDefault()
    this.event.stopPropagation()
    form.classList.add('was-validated')
    return
  }

  form.classList.add('was-validated')

  controlPayButton(true)

  let amountToCharge = String(parseFloat(document.querySelector('#amount').value)* 100)

  let payload = {
    amount: amountToCharge,
    currency: 'BRL',
  }

  const requestOptions = {
    method: 'POST',
    headers: {
      'Accept': 'application/json',
      'Content-type': 'application/json',
    },
    body: JSON.stringify(payload),
  }

  fetch('{{.API}}/api/payment-intent', requestOptions)
    .then(response => response.text())
    .then(response => {
        let data
        
        try {
          data = JSON.parse(response)
          
          stripe.confirmCardPayment(data.client_secret, {
            payment_method: {
              card: card,
              billing_details: {
                name: document.querySelector('#cardholder_name').value,
              },
            },
          })
          .then(result => {
            if (result.error) {
              showCardError(result.error.message)
              controlPayButton(false)
              return
            }

            if (result.paymentIntent) {
              if (result.paymentIntent.status === 'succeeded') {
                document.querySelector('#payment_intent').value = result.paymentIntent.id
                document.querySelector('#payment_amount').value = result.paymentIntent.amount
                document.querySelector('#payment_currency').value = result.paymentIntent.currency
                document.querySelector('#payment_method').value = result.paymentIntent.payment_method_types[0]
                processing.classList.add('d-none')
                
                showCardSuccess()

                document.querySelector("#charge-form").submit()

                return
              }
            }
          })
        } catch (error) {
          console.log(error)
          controlPayButton(false)
          showCardError("Invalid response from payment gateway!")
          return
        }
    })
}

(() => {
  const elements = stripe.elements()
  const styles = {
    base: {
      fontSize: '16px',
      lineHeight: '24px',
    }
  }

  card = elements.create('card', {
    style: styles,
    hidePostalCode: true,
  })

  card.mount('#card-element')

  card.addEventListener('change', (event) => {
    let displayError = document.querySelector("#card-errors")
    let displaySuccess = document.querySelector("#card-Success")

    if (event.error) {
      displayError.classList.remove('d-none')
      displayError.textContent = event.error.message
      return
    }

    displayError.classList.add('d-none')
    displayError.textContent = ''

    return
  })
})()
</script>
{{end}}